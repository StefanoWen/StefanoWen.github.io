{"title":"picoCTF2018 Writeup之Cryptography篇","date":"2018-11-01T22:07:07.000Z","date_formatted":{"ll":"Nov 1, 2018","L":"11/01/2018","MM-DD":"11-01"},"link":"/picoCTF2018-Writeup之Cryptography篇","tags":["CTF"],"updated":"2020-12-27T16:45:50.786Z","content":"<p>旧文搬运，原文地址:<a href=\"https://xz.aliyun.com/t/3099\">https://xz.aliyun.com/t/3099</a></p>\n<h1 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h1>\n<p>本篇是Cryptography密码学类的题解。难度从简到难，涉及了一些ctf比赛中常见的密码学套路。部分题目附件已打包。<br>\n链接: <a href=\"https://pan.baidu.com/s/13LVIkBMuUekRLGCsLElIVg\">https://pan.baidu.com/s/13LVIkBMuUekRLGCsLElIVg</a> 提取码: 3ei6</p>\n<a id=\"more\"></a>\n<h1 id=\"crypto-warmup-1\">Crypto Warmup 1<a title=\"#crypto-warmup-1\" href=\"#crypto-warmup-1\"></a></h1>\n<h2 id=\"question\">Question<a title=\"#question\" href=\"#question\"></a></h2>\n<blockquote>\n<p>Crpyto can often be done by hand, here’s a message you got from a friend, <code>llkjmlmpadkkc</code> with the key of <code>thisisalilkey</code>. Can you use this <a href=\"https://2018shell2.picoctf.com/static/43f28853477d7b2ed52e0efbfb04dff7/table.txt\" target=\"_blank\">table</a> to solve it?.</p>\n</blockquote>\n<h3 id=\"hint\">Hint<a title=\"#hint\" href=\"#hint\"></a></h3>\n<blockquote>\n<p>Submit your answer in our competition’s flag format. For example, if you answer was ‘hello’, you would submit ‘picoCTF{HELLO}’ as the flag.</p>\n<p>Please use all caps for the message.</p>\n</blockquote>\n<h2 id=\"solution\">Solution<a title=\"#solution\" href=\"#solution\"></a></h2>\n<p>维吉尼亚密码，详细内容可以参考<a href=\"https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher\" target=\"_blank\">wiki</a>。解密脚本如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">cipher = <span class=\"string\">&#x27;llkjmlmpadkkc&#x27;</span></span><br><span class=\"line\">key = <span class=\"string\">&#x27;thisisalilkey&#x27;</span></span><br><span class=\"line\">message = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> xrange(<span class=\"built_in\">len</span>(cipher)):</span><br><span class=\"line\">    message += <span class=\"built_in\">chr</span>(((<span class=\"built_in\">ord</span>(cipher[i]) - <span class=\"number\">97</span>) - (<span class=\"built_in\">ord</span>(key[i]) - <span class=\"number\">97</span>) + <span class=\"number\">26</span>) % <span class=\"number\">26</span> + <span class=\"number\">97</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span> message</span><br></pre></td></tr></table></figure>\n<p>flag:<code>picoCTF&#123;SECRETMESSAGE&#125;</code></p>\n<h1 id=\"crypto-warmup-2\">Crypto Warmup 2<a title=\"#crypto-warmup-2\" href=\"#crypto-warmup-2\"></a></h1>\n<h2 id=\"question-1\">Question<a title=\"#question-1\" href=\"#question-1\"></a></h2>\n<blockquote>\n<p>Cryptography doesn’t have to be complicated, have you ever heard of something called rot13? <code>cvpbPGS&#123;guvf_vf_pelcgb!&#125;</code></p>\n</blockquote>\n<h3 id=\"hint-1\">Hint<a title=\"#hint-1\" href=\"#hint-1\"></a></h3>\n<blockquote>\n<p>This can be solved online if you don’t want to do it by hand!</p>\n</blockquote>\n<h2 id=\"solution-1\">Solution<a title=\"#solution-1\" href=\"#solution-1\"></a></h2>\n<p>凯撒密码，经过一次rot13就可以恢复原文。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ python -c <span class=\"string\">&quot;print &#x27;cvpbPGS&#123;guvf_vf_pelcgb!&#125;&#x27;.decode(&#x27;rot_13&#x27;)&quot;</span></span><br><span class=\"line\">picoCTF&#123;this_is_crypto!&#125;</span><br></pre></td></tr></table></figure>\n<p>flag:<code>picoCTF&#123;this_is_crypto!&#125;</code></p>\n<h1 id=\"heeeeeeere's-johnny!\">HEEEEEEERE’S Johnny!<a title=\"#heeeeeeere's-johnny!\" href=\"#heeeeeeere's-johnny!\"></a></h1>\n<h2 id=\"question-2\">Question<a title=\"#question-2\" href=\"#question-2\"></a></h2>\n<blockquote>\n<p>Okay, so we found some important looking files on a linux computer. Maybe they can be used to get a password to the process. Connect with <code>nc 2018shell1.picoctf.com 5221</code>. Files can be found here: <a href=\"https://2018shell2.picoctf.com/static/7a017af70c0b86ab002896616376499e/passwd\" target=\"_blank\">passwd</a> <a href=\"https://2018shell2.picoctf.com/static/7a017af70c0b86ab002896616376499e/shadow\" target=\"_blank\">shadow</a>.</p>\n</blockquote>\n<h3 id=\"hint-2\">Hint<a title=\"#hint-2\" href=\"#hint-2\"></a></h3>\n<blockquote>\n<p>If at first you don’t succeed, try, try again. And again. And again.</p>\n<p>If you’re not careful these kind of problems can really “rockyou”.</p>\n</blockquote>\n<h2 id=\"solution-2\">Solution<a title=\"#solution-2\" href=\"#solution-2\"></a></h2>\n<p>根据题目名字提示，可以使用<a href=\"https://www.openwall.com/john/\" target=\"_blank\">John the Ripper</a>，一款密码破解工具。使用<code>john</code>自带的密码表就可以跑出root的密码了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ ./unshadow passwd shadow &gt; ./crack.db</span><br><span class=\"line\">❯ ./john ./crack.db</span><br><span class=\"line\">Warning: detected <span class=\"built_in\">hash</span> <span class=\"built_in\">type</span> <span class=\"string\">&quot;sha512crypt&quot;</span>, but the string is also recognized as <span class=\"string\">&quot;sha512crypt-opencl&quot;</span></span><br><span class=\"line\">Use the <span class=\"string\">&quot;--format=sha512crypt-opencl&quot;</span> option to force loading these as that <span class=\"built_in\">type</span> instead</span><br><span class=\"line\">Warning: <span class=\"built_in\">hash</span> encoding string length 98, <span class=\"built_in\">type</span> id <span class=\"variable\">$6</span></span><br><span class=\"line\">appears to be unsupported on this system; will not load such hashes.</span><br><span class=\"line\">Loaded 1 password <span class=\"built_in\">hash</span> (sha512crypt, crypt(3) $6$ [SHA512 64/64 OpenSSL])</span><br><span class=\"line\">Press <span class=\"string\">&#x27;q&#x27;</span> or Ctrl-C to abort, almost any other key <span class=\"keyword\">for</span> status</span><br><span class=\"line\">kissme           (root)</span><br><span class=\"line\">1g 0:00:00:06 DONE 2/3 (2018-10-14 11:56) 0.1529g/s 361.6p/s 361.6c/s 361.6C/s kissme</span><br><span class=\"line\">Use the <span class=\"string\">&quot;--show&quot;</span> option to display all of the cracked passwords reliably</span><br><span class=\"line\">Session completed</span><br><span class=\"line\">❯ nc 2018shell2.picoctf.com 40157</span><br><span class=\"line\">Username: root</span><br><span class=\"line\">Password: kissme</span><br><span class=\"line\">picoCTF&#123;J0hn_1<span class=\"variable\">$_R1pp3d_1b25af80</span>&#125;</span><br></pre></td></tr></table></figure>\n<p>flag:<code>picoCTF&#123;J0hn_1$_R1pp3d_1b25af80&#125;</code></p>\n<h1 id=\"caesar-cipher-1\">caesar cipher 1<a title=\"#caesar-cipher-1\" href=\"#caesar-cipher-1\"></a></h1>\n<h2 id=\"question-3\">Question<a title=\"#question-3\" href=\"#question-3\"></a></h2>\n<blockquote>\n<p>This is one of the older ciphers in the books, can you decrypt the <a href=\"https://2018shell2.picoctf.com/static/1496b9c149dea14875a4f750169a7af1/ciphertext\" target=\"_blank\">message</a>? You can find the ciphertext in /problems/caesar-cipher-1_4_e4dc6dcfb004bdade0b9ce8e44f1bac4 on the shell server.</p>\n</blockquote>\n<h3 id=\"hint-3\">Hint<a title=\"#hint-3\" href=\"#hint-3\"></a></h3>\n<blockquote>\n<p>caesar cipher <a href=\"https://learncryptography.com/classical-encryption/caesar-cipher\" target=\"_blank\">tutorial</a></p>\n</blockquote>\n<h2 id=\"solution-3\">Solution<a title=\"#solution-3\" href=\"#solution-3\"></a></h2>\n<p>还是凯撒，爆破一下偏移量，找到有意义的字符串。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">cipher = <span class=\"string\">&#x27;vgefmsaapaxpomqemdoubtqdxoaxypeo&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> xrange(<span class=\"number\">25</span>):</span><br><span class=\"line\">    flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> cipher:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">ord</span>(i) &gt;= <span class=\"number\">97</span> <span class=\"keyword\">and</span> <span class=\"built_in\">ord</span>(i) &lt;= <span class=\"number\">122</span>:</span><br><span class=\"line\">            flag += <span class=\"built_in\">chr</span>(((<span class=\"built_in\">ord</span>(i) - <span class=\"number\">97</span>) + j) % <span class=\"number\">26</span> + <span class=\"number\">97</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">ord</span>(i) &gt;= <span class=\"number\">65</span> <span class=\"keyword\">and</span> <span class=\"built_in\">ord</span>(i) &lt;= <span class=\"number\">91</span>:</span><br><span class=\"line\">            flag += <span class=\"built_in\">chr</span>(((<span class=\"built_in\">ord</span>(i) - <span class=\"number\">65</span>) + j + <span class=\"number\">26</span>) % <span class=\"number\">26</span> + <span class=\"number\">65</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span> flag</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>结果如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vgefmsaapaxpomqemdoubtqdxoaxypeo</span><br><span class=\"line\">whfgntbbqbyqpnrfnepvcureypbyzqfp</span><br><span class=\"line\">xighouccrczrqosgofqwdvsfzqczargq</span><br><span class=\"line\">yjhipvddsdasrpthpgrxewtgardabshr</span><br><span class=\"line\">zkijqweetebtsquiqhsyfxuhbsebctis</span><br><span class=\"line\">aljkrxffufcutrvjritzgyvictfcdujt</span><br><span class=\"line\">bmklsyggvgdvuswksjuahzwjdugdevku</span><br><span class=\"line\">cnlmtzhhwhewvtxltkvbiaxkevhefwlv</span><br><span class=\"line\">domnuaiixifxwuymulwcjbylfwifgxmw</span><br><span class=\"line\">epnovbjjyjgyxvznvmxdkczmgxjghynx</span><br><span class=\"line\">fqopwckkzkhzywaownyeldanhykhizoy</span><br><span class=\"line\">grpqxdllaliazxbpxozfmeboizlijapz</span><br><span class=\"line\">hsqryemmbmjbaycqypagnfcpjamjkbqa</span><br><span class=\"line\">itrszfnncnkcbzdrzqbhogdqkbnklcrb</span><br><span class=\"line\">justagoodoldcaesarcipherlcolmdsc</span><br><span class=\"line\">kvtubhppepmedbftbsdjqifsmdpmnetd</span><br><span class=\"line\">lwuvciqqfqnfecguctekrjgtneqnofue</span><br><span class=\"line\">mxvwdjrrgrogfdhvduflskhuofropgvf</span><br><span class=\"line\">nywxeksshsphgeiwevgmtlivpgspqhwg</span><br><span class=\"line\">ozxyflttitqihfjxfwhnumjwqhtqrixh</span><br><span class=\"line\">payzgmuujurjigkygxiovnkxriursjyi</span><br><span class=\"line\">qbzahnvvkvskjhlzhyjpwolysjvstkzj</span><br><span class=\"line\">rcabiowwlwtlkimaizkqxpmztkwtulak</span><br><span class=\"line\">sdbcjpxxmxumljnbjalryqnaulxuvmbl</span><br><span class=\"line\">tecdkqyynyvnmkockbmszrobvmyvwncm</span><br></pre></td></tr></table></figure>\n<p>找到有意义的字符串<code>justagoodoldcaesarcipherlcolmdsc</code>，得到flag。</p>\n<p>flag:<code>picoCTF&#123;justagoodoldcaesarcipherlcolmdsc&#125;</code></p>\n<h1 id=\"hertz\">hertz<a title=\"#hertz\" href=\"#hertz\"></a></h1>\n<h2 id=\"question-4\">Question<a title=\"#question-4\" href=\"#question-4\"></a></h2>\n<blockquote>\n<p>Here’s another simple cipher for you where we made a bunch of substitutions. Can you decrypt it? Connect with <code>nc 2018shell1.picoctf.com 18581</code>.</p>\n</blockquote>\n<h3 id=\"hint-4\">Hint<a title=\"#hint-4\" href=\"#hint-4\"></a></h3>\n<blockquote>\n<p>NOTE: Flag is not in the usual flag format</p>\n</blockquote>\n<h2 id=\"solution-4\">Solution<a title=\"#solution-4\" href=\"#solution-4\"></a></h2>\n<p>替换密码，因为给的段落足够长，所以可以对词频进行静态分析，得到替换表，然后恢复原文，<a href=\"https://quipqiup.com/\" target=\"_blank\">在线工具</a>。</p>\n<p><img src=\"https://raw.githubusercontent.com/StefanoWen/img/master/img/20181029004321.png\" alt=\"\" class=\"φcx\"></p>\n<p>flag:<code>substitution_ciphers_are_solvable_fuosdblgwv</code></p>\n<h1 id=\"blaise's-cipher\">blaise’s cipher<a title=\"#blaise's-cipher\" href=\"#blaise's-cipher\"></a></h1>\n<h2 id=\"question-5\">Question<a title=\"#question-5\" href=\"#question-5\"></a></h2>\n<blockquote>\n<p>My buddy Blaise told me he learned about this cool cipher invented by a guy also named Blaise! Can you figure out what it says? Connect with <code>nc 2018shell1.picoctf.com 46966</code>.</p>\n</blockquote>\n<h3 id=\"hint-5\">Hint<a title=\"#hint-5\" href=\"#hint-5\"></a></h3>\n<blockquote>\n<p>There are tools that make this easy.</p>\n<p>This cipher was NOT invented by Pascal</p>\n</blockquote>\n<h2 id=\"solution-5\">Solution<a title=\"#solution-5\" href=\"#solution-5\"></a></h2>\n<p>还是关于维吉尼亚密码（发明者全名为<code>Blaise De Vigenère</code>），和第一题不同的是这题没有提供密钥。但这题给的密文还是相当的长，依然可以使用静态分析，主要的方法有<code>Kasiski 测试法 </code>和<code>互重合指数法</code>。这里使用https://www.mygeocachingprofile.com/codebreaker.vigenerecipher.aspx做分析。</p>\n<p><img src=\"https://raw.githubusercontent.com/StefanoWen/img/master/img/20181029005048.png\" alt=\"\" class=\"φcx\"></p>\n<p>得到密钥：<code>flag</code>。</p>\n<p><img src=\"https://raw.githubusercontent.com/StefanoWen/img/master/img/20181029005116.png\" alt=\"\" class=\"φcx\"></p>\n<p>然后解密，得到flag。</p>\n<p>flag:<code>picoctf&#123;v1gn3r3_c1ph3rs_ar3n7_bad_cdf08bf0&#125;</code></p>\n<h1 id=\"hertz-2\">hertz 2<a title=\"#hertz-2\" href=\"#hertz-2\"></a></h1>\n<h2 id=\"question-6\">Question<a title=\"#question-6\" href=\"#question-6\"></a></h2>\n<blockquote>\n<p>This flag has been encrypted with some kind of cipher, can you decrypt it? Connect with <code>nc 2018shell1.picoctf.com 23479</code>.</p>\n</blockquote>\n<h3 id=\"hint-6\">Hint<a title=\"#hint-6\" href=\"#hint-6\"></a></h3>\n<blockquote>\n<p>These kinds of problems are solved with a frequency that merits some analysis.</p>\n</blockquote>\n<h2 id=\"solution-6\">Solution<a title=\"#solution-6\" href=\"#solution-6\"></a></h2>\n<p>还是替换密码，不过这次给的密文比较短。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Let&#39;s decode this now!</span><br><span class=\"line\">Jea vbpkh glsni dsc obmyf stal jea wqzx usr. P kqi&#39;j gawpata jepf pf fbke qi aqfx ylsgwam pi Ypks. Pj&#39;f qwmsfj qf pd P fswtau q ylsgwam qwlaqux! Shqx, dpia. Eala&#39;f jea dwqr: ypksKJD&#123;fbgfjpjbjpsi_kpyealf_qla_jss_aqfx_txugsyxgti&#125;</span><br></pre></td></tr></table></figure>\n<p>根据flag的特征，可以得到线索<code>ypksKJD=picoCTF</code>。再使用https://quipqiup.com/，设置线索进行破解。</p>\n<p>flag:<code>picoCTF&#123;substitution_ciphers_are_too_easy_vydbopybvn&#125;</code></p>\n<h1 id=\"safe-rsa\">Safe RSA<a title=\"#safe-rsa\" href=\"#safe-rsa\"></a></h1>\n<h2 id=\"question-7\">Question<a title=\"#question-7\" href=\"#question-7\"></a></h2>\n<blockquote>\n<p>Now that you know about RSA can you help us decrypt this <a href=\"https://2018shell2.picoctf.com/static/6fc0e4875e66b042896fc9019b7fa9d2/ciphertext\" target=\"_blank\">ciphertext</a>? We don’t have the decryption key but something about those values looks funky…</p>\n</blockquote>\n<h3 id=\"hint-7\">Hint<a title=\"#hint-7\" href=\"#hint-7\"></a></h3>\n<blockquote>\n<p>RSA <a href=\"https://en.wikipedia.org/wiki/RSA_(cryptosystem)\" target=\"_blank\">tutorial</a></p>\n<p>Hmmm that e value looks kinda small right?</p>\n<p>These are some really big numbers… Make sure you’re using functions that don’t lose any precision!</p>\n</blockquote>\n<h2 id=\"solution-7\">Solution<a title=\"#solution-7\" href=\"#solution-7\"></a></h2>\n<p>附件给了密文和公钥对：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">N: 374159235470172130988938196520880526947952521620932362050308663243595788308583992120881359365258949723819911758198013202644666489247987314025169670926273213367237020188587742716017314320191350666762541039238241984934473188656610615918474673963331992408750047451253205158436452814354564283003696666945950908549197175404580533132142111356931324330631843602412540295482841975783884766801266552337129105407869020730226041538750535628619717708838029286366761470986056335230171148734027536820544543251801093230809186222940806718221638845816521738601843083746103374974120575519418797642878012234163709518203946599836959811</span><br><span class=\"line\">e: 3</span><br><span class=\"line\"></span><br><span class=\"line\">ciphertext (c): 2205316413931134031046440767620541984801091216351222789180593875373829950860542792110364325728088504479780803714561464250589795961097670884274813261496112882580892020487261058118157619586156815531561455215290361274334977137261636930849125 </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><code>e</code>很明显太小了，存在<strong>低加密指数攻击</strong>，详细可以参考<a href=\"https://www.anquanke.com/post/id/84632\" target=\"_blank\">CTF中RSA的常见攻击方法</a>。</p>\n<p>也就是说加密时，如果明文的三次方依然小于<code>N</code>，会导致<code>mod N</code>这一步根本没有用到，直接对密文三次开方即可得到明文。</p>\n<p>即：</p>\n<p><img src=\"https://raw.githubusercontent.com/StefanoWen/img/master/img/20181029011147.png\" alt=\"\" class=\"φcx\"></p>\n<p>如果明文的三次方比n大，但并不是很大，那么设k，存在以下关系：</p>\n<p><img src=\"https://raw.githubusercontent.com/StefanoWen/img/master/img/20181029011357.png\" alt=\"\" class=\"φcx\"></p>\n<p>爆破k，如果</p>\n<p><img src=\"https://raw.githubusercontent.com/StefanoWen/img/master/img/20181029011557.png\" alt=\"\" class=\"φcx\"></p>\n<p>能开三次根式，那么可以直接得到明文。</p>\n<p>爆破脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> gmpy</span><br><span class=\"line\"></span><br><span class=\"line\">N = <span class=\"number\">374159235470172130988938196520880526947952521620932362050308663243595788308583992120881359365258949723819911758198013202644666489247987314025169670926273213367237020188587742716017314320191350666762541039238241984934473188656610615918474673963331992408750047451253205158436452814354564283003696666945950908549197175404580533132142111356931324330631843602412540295482841975783884766801266552337129105407869020730226041538750535628619717708838029286366761470986056335230171148734027536820544543251801093230809186222940806718221638845816521738601843083746103374974120575519418797642878012234163709518203946599836959811</span></span><br><span class=\"line\">e = <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\">c = <span class=\"number\">2205316413931134031046440767620541984801091216351222789180593875373829950860542792110364325728088504479780803714561464250589795961097670884274813261496112882580892020487261058118157619586156815531561455215290361274334977137261636930849125</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">i = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(gmpy.root(c + i * N, <span class=\"number\">3</span>)[<span class=\"number\">1</span>] == <span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span> gmpy.root(c + i * N, <span class=\"number\">3</span>),i</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    i = i + <span class=\"number\">1</span></span><br><span class=\"line\">d = <span class=\"built_in\">hex</span>(<span class=\"number\">13016382529449106065839070830454998857466392684017754632233929110204433151964285</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> d[<span class=\"number\">2</span>:-<span class=\"number\">1</span>].decode(<span class=\"string\">&#x27;hex&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>flag:<code>picoCTF&#123;e_w4y_t00_sm411_9f5d2464&#125;</code></p>\n<h1 id=\"caesar-cipher-2\">caesar cipher 2<a title=\"#caesar-cipher-2\" href=\"#caesar-cipher-2\"></a></h1>\n<h2 id=\"question-8\">Question<a title=\"#question-8\" href=\"#question-8\"></a></h2>\n<blockquote>\n<p>Can you help us decrypt this <a href=\"https://2018shell2.picoctf.com/static/aade48805797b8b842d876e93db27549/ciphertext\" target=\"_blank\">message</a>? We believe it is a form of a caesar cipher. You can find the ciphertext in /problems/caesar-cipher-2_3_4a1aa2a4d0f79a1f8e9a29319250740a on the shell server.</p>\n</blockquote>\n<h3 id=\"hint-8\">Hint<a title=\"#hint-8\" href=\"#hint-8\"></a></h3>\n<blockquote>\n<p>You’ll have figure out the correct alphabet that was used to encrypt the ciphertext from the ascii character set</p>\n<p><a href=\"https://www.asciitable.com/\" target=\"_blank\">ASCII Table</a></p>\n</blockquote>\n<h2 id=\"solution-8\">Solution<a title=\"#solution-8\" href=\"#solution-8\"></a></h2>\n<p>加入了特殊字符的凯撒密码，爆破范围从大小写字母扩大到所有可能的偏移量。脚本如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">cipher = <span class=\"string\">&#x27;^WQ]1B4iQ/SaO@M1W&gt;V3`AMXcABMO@3\\\\BMa3QC`3k&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> xrange(<span class=\"number\">0</span>,<span class=\"number\">126</span>):</span><br><span class=\"line\">    flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> cipher:</span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(i)  + j))</span><br><span class=\"line\">    <span class=\"built_in\">print</span> flag</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>flag:<code>picoCTF&#123;cAesaR_CiPhErS_juST_aREnT_sEcUrE&#125;</code></p>\n<h1 id=\"rsa-madlibs\">rsa-madlibs<a title=\"#rsa-madlibs\" href=\"#rsa-madlibs\"></a></h1>\n<h2 id=\"question-9\">Question<a title=\"#question-9\" href=\"#question-9\"></a></h2>\n<blockquote>\n<p>We ran into some weird puzzles we think may mean something, can you help me solve one? Connect with <code>nc 2018shell1.picoctf.com 40440</code></p>\n</blockquote>\n<h3 id=\"hint-9\">Hint<a title=\"#hint-9\" href=\"#hint-9\"></a></h3>\n<blockquote>\n<p><a href=\"https://simple.wikipedia.org/wiki/RSA_algorithm\" target=\"_blank\">RSA info</a></p>\n</blockquote>\n<h2 id=\"solution-9\">Solution<a title=\"#solution-9\" href=\"#solution-9\"></a></h2>\n<p>nc连接服务器，需要根据描述一步步的解决关于RSA加解密的问题：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ nc 2018shell1.picoctf.com 40440</span><br><span class=\"line\">0x7069636f4354467b64305f755f6b6e30775f7468335f7740795f325f5253405f35643338336531307dL &lt;<span class=\"built_in\">type</span> <span class=\"string\">&#x27;long&#x27;</span>&gt;</span><br><span class=\"line\">Hello, Welcome to RSA Madlibs</span><br><span class=\"line\">Keeping young children entertained, since, well, nev3r</span><br><span class=\"line\">Tell us how to fill <span class=\"keyword\">in</span> the blanks, or <span class=\"keyword\">if</span> it<span class=\"string\">&#x27;s even possible to do so</span></span><br><span class=\"line\"><span class=\"string\">Everything, input and output, is decimal, not hex</span></span><br><span class=\"line\"><span class=\"string\">#### NEW MADLIB ####</span></span><br><span class=\"line\"><span class=\"string\">q : 93187</span></span><br><span class=\"line\"><span class=\"string\">p : 94603</span></span><br><span class=\"line\"><span class=\"string\">##### WE&#x27;</span>RE GONNA NEED THE FOLLOWING <span class=\"comment\">####</span></span><br><span class=\"line\">n</span><br><span class=\"line\">IS THIS POSSIBLE and FEASIBLE? (Y/N):</span><br></pre></td></tr></table></figure>\n<p>可以双开窗口，边解边答。只要我的手速够快，服务器断线的速度就跟不上我-0-。</p>\n<p><img src=\"https://raw.githubusercontent.com/StefanoWen/img/master/img/20181029014624.png\" alt=\"\" class=\"φcx\"></p>\n<p>不过不知道开头为什么给了一串16进制字符串，解一下直接得到了flag……</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ python -c <span class=\"string\">&quot;print(&#x27;7069636f4354467b64305f755f6b6e30775f7468335f7740795f325f5253405f35643338336531307d&#x27;).decode(&#x27;hex&#x27;)&quot;</span></span><br><span class=\"line\">picoCTF&#123;d0_u_kn0w_th3_w@y_2_RS@_5d383e10&#125;</span><br></pre></td></tr></table></figure>\n<p>flag:<code>picoCTF&#123;d0_u_kn0w_th3_w@y_2_RS@_5d383e10&#125;</code></p>\n<h1 id=\"spyfi\">SpyFi<a title=\"#spyfi\" href=\"#spyfi\"></a></h1>\n<h2 id=\"question-10\">Question<a title=\"#question-10\" href=\"#question-10\"></a></h2>\n<blockquote>\n<p>James Brahm, James Bond’s less-franchised cousin, has left his secure communication with HQ running, but we couldn’t find a way to steal his agent identification code. Can you? Conect with <code>nc 2018shell1.picoctf.com 30399</code>. <a href=\"https://2018shell2.picoctf.com/static/f3d296ccf53d080f6f8b01fb8e2810f9/spy_terminal_no_flag.py\" target=\"_blank\">Source</a>.</p>\n</blockquote>\n<h3 id=\"hint-10\">Hint<a title=\"#hint-10\" href=\"#hint-10\"></a></h3>\n<blockquote>\n<p>What mode is being used?</p>\n</blockquote>\n<h2 id=\"solution-10\">Solution<a title=\"#solution-10\" href=\"#solution-10\"></a></h2>\n<p>查看程序源码，使用的是AES的ECB模式，padding为16位：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pad</span>(<span class=\"params\">message</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(message) % <span class=\"number\">16</span> != <span class=\"number\">0</span>:</span><br><span class=\"line\">        message = message + <span class=\"string\">&#x27;0&#x27;</span> * (<span class=\"number\">16</span> - <span class=\"built_in\">len</span>(message) % <span class=\"number\">16</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> message</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">encrypt</span>(<span class=\"params\">key, plain</span>):</span></span><br><span class=\"line\">    cipher = AES.new(key.decode(<span class=\"string\">&#x27;hex&#x27;</span>), AES.MODE_ECB)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cipher.encrypt(plain).encode(<span class=\"string\">&#x27;hex&#x27;</span>)</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>AES-ECB模式的加解密方式如图：</p>\n<p><img src=\"https://raw.githubusercontent.com/StefanoWen/img/master/img/20181029163705.png\" alt=\"\" class=\"φcx\"></p>\n<p><img src=\"https://raw.githubusercontent.com/StefanoWen/img/master/img/20181029163811.png\" alt=\"\" class=\"φcx\"></p>\n<p>再看程序中默认会发送的字符串：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">welcome = <span class=\"string\">&quot;Welcome, Agent 006!&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span> welcome</span><br><span class=\"line\"></span><br><span class=\"line\">sitrep = raw_input(<span class=\"string\">&quot;Please enter your situation report: &quot;</span>)</span><br><span class=\"line\">message = <span class=\"string\">&quot;&quot;&quot;Agent,</span></span><br><span class=\"line\"><span class=\"string\">Greetings. My situation report is as follows:</span></span><br><span class=\"line\"><span class=\"string\">&#123;0&#125;</span></span><br><span class=\"line\"><span class=\"string\">My agent identifying code is: &#123;1&#125;.</span></span><br><span class=\"line\"><span class=\"string\">Down with the Soviets,</span></span><br><span class=\"line\"><span class=\"string\">006</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span>.<span class=\"built_in\">format</span>(sitrep, agent_code)</span><br><span class=\"line\"></span><br><span class=\"line\">message = pad(message)</span><br><span class=\"line\"><span class=\"built_in\">print</span> encrypt(<span class=\"string\">&quot;&quot;&quot;key&quot;&quot;&quot;</span>, message)</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>我们向服务器发送<code>AAAAAAAAAAA + BBBBBBBBBBBBBBBB + CCCCCCCCCCCCCCCC</code>，共11个<code>A</code>，16个<code>B</code>和<code>C</code>。</p>\n<p>假设flag为16位的<code>picoCTF&#123;1234567&#125;</code>，那么服务器接收到的字符串就会类似如下的形式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#39;Agent,\\nGreetings&#39;   (块 1)</span><br><span class=\"line\">&#39;. My situation r&#39;    (块 2)</span><br><span class=\"line\">&#39;eport is as foll&#39;    (块 3)</span><br><span class=\"line\">&#39;ows:\\nAAAAAAAAAAA&#39;   (块 4)</span><br><span class=\"line\">&#39;BBBBBBBBBBBBBBBB&#39;    (块 5)</span><br><span class=\"line\">&#39;CCCCCCCCCCCCCCCC&#39;    (块 6)</span><br><span class=\"line\">&#39;\\nMy agent identi&#39;   (块 7)</span><br><span class=\"line\">&#39;fying code is:  &#39;    (块 8)  &lt;--- 已知</span><br><span class=\"line\">&#39;picoCTF&#123;1234567&#125;&#39;    (块 9)  &lt;--- 未知</span><br><span class=\"line\">&#39;.Down with the S&#39;    (块 10) &lt;--- 已知</span><br></pre></td></tr></table></figure>\n<p>接着，少发送一个<code>C</code>，就会变成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#39;Agent,\\nGreetings&#39;   (块 1)</span><br><span class=\"line\">&#39;. My situation r&#39;    (块 2)</span><br><span class=\"line\">&#39;eport is as foll&#39;    (块 3)</span><br><span class=\"line\">&#39;ows:\\nAAAAAAAAAAA&#39;   (块 4)</span><br><span class=\"line\">&#39;BBBBBBBBBBBBBBBB&#39;    (块 5)</span><br><span class=\"line\">&#39;CCCCCCCCCCCCCCC\\n&#39;   (块 6)</span><br><span class=\"line\">&#39;My agent identif&#39;    (块 7)</span><br><span class=\"line\">&#39;ying code is:  p&#39;    (块 8)  &lt;--- 在这里我们得到了包含flag第一位的密文，但并不知道第一位具体是什么</span><br><span class=\"line\">&#39;icoCTF&#123;1234567&#125;.&#39;    (块 9)  &lt;--- 未知</span><br><span class=\"line\">&#39;Down with the So&#39;    (块 10) &lt;--- 已知</span><br></pre></td></tr></table></figure>\n<p>把块 5替换成块 8的格式化输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#39;Agent,\\nGreetings&#39;   (块 1)</span><br><span class=\"line\">&#39;. My situation r&#39;    (块 2)</span><br><span class=\"line\">&#39;eport is as foll&#39;    (块 3)</span><br><span class=\"line\">&#39;ows:\\nAAAAAAAAAAA&#39;   (块 4)</span><br><span class=\"line\">&#39;ying code is: %s&#39;    (块 5)  &lt;--- 可以逐位爆破%s</span><br><span class=\"line\">&#39;CCCCCCCCCCCCCCC\\n&#39;   (块 6)</span><br><span class=\"line\">&#39;My agent identif&#39;    (块 7)</span><br><span class=\"line\">&#39;ying code is:  p&#39;    (块 8)  &lt;--- 在这里我们得到了包含flag第一位的密文，但并不知道这个密文是什么</span><br><span class=\"line\">&#39;icoCTF&#123;1234567&#125;.&#39;    (块 9)  &lt;--- 未知</span><br><span class=\"line\">&#39;Down with the So&#39;    (块 10) &lt;--- 已知</span><br></pre></td></tr></table></figure>\n<p>爆破块 5，如果密文和块 8相同，则表示我们找到了flag的第一位，接下来，再减少一个<code>C</code>，使得块 8带有flag的前两位字符。如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#39;Agent,\\nGreetings&#39;   (块 1)</span><br><span class=\"line\">&#39;. My situation r&#39;    (块 2)</span><br><span class=\"line\">&#39;eport is as foll&#39;    (块 3)</span><br><span class=\"line\">&#39;ows:\\nAAAAAAAAAAA&#39;   (块 4)</span><br><span class=\"line\">&#39;ing code is: p%s&#39;    (块 5)  &lt;--- 同步替换块 5</span><br><span class=\"line\">&#39;CCCCCCCCCCCCCC\\nM&#39;   (块 6)</span><br><span class=\"line\">&#39;y agent identify&#39;    (块 7)</span><br><span class=\"line\">&#39;ing code is:  pi&#39;    (块 8)  &lt;--- 包含flag第一、二位的密文</span><br><span class=\"line\">&#39;coCTF&#123;1234567&#125;.D&#39;    (块 9)  &lt;--- 未知</span><br><span class=\"line\">&#39;own with the Sov&#39;    (块 10) &lt;--- 已知</span><br></pre></td></tr></table></figure>\n<p>然后继续爆破flag的第二位。依次循环下去，就可以获得完整的flag。</p>\n<p>爆破脚本如下(服务器加密一次后就会断开连接，所以跑完flag所用的时间会比较长)：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> * </span><br><span class=\"line\">flag = <span class=\"string\">&quot;picoCTF&#123;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">14</span>):</span><br><span class=\"line\">   p = remote(<span class=\"string\">&#x27;2018shell1.picoctf.com&#x27;</span>, <span class=\"number\">30399</span>)</span><br><span class=\"line\">   p.recvuntil(<span class=\"string\">&#x27;Please enter your situation report: &#x27;</span>)</span><br><span class=\"line\">   my_msg = <span class=\"string\">&quot;A&quot;</span>*<span class=\"number\">11</span>+<span class=\"string\">&quot;B&quot;</span>*(<span class=\"number\">25</span>-j)</span><br><span class=\"line\">   p.sendline(my_msg)</span><br><span class=\"line\">   enc_msg = p.recv(<span class=\"number\">1024</span>).decode(<span class=\"string\">&#x27;hex&#x27;</span>)</span><br><span class=\"line\">   p.close()</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">32</span>,<span class=\"number\">128</span>):</span><br><span class=\"line\">       q = remote(<span class=\"string\">&#x27;2018shell1.picoctf.com&#x27;</span>, <span class=\"number\">30399</span>)</span><br><span class=\"line\">       q.recvuntil(<span class=\"string\">&#x27;Please enter your situation report: &#x27;</span>)</span><br><span class=\"line\">       msg = <span class=\"string\">&quot;A&quot;</span>*<span class=\"number\">11</span>+<span class=\"string\">&quot;B&quot;</span>*(<span class=\"number\">14</span>-j) + flag + <span class=\"built_in\">chr</span>(i)</span><br><span class=\"line\"></span><br><span class=\"line\">       q.sendline(msg)</span><br><span class=\"line\">       y = q.recv(<span class=\"number\">1024</span>).decode(<span class=\"string\">&#x27;hex&#x27;</span>)</span><br><span class=\"line\">       q.close()</span><br><span class=\"line\">       <span class=\"keyword\">if</span> y[<span class=\"number\">80</span>:<span class=\"number\">96</span>] == enc_msg[<span class=\"number\">128</span>:<span class=\"number\">144</span>]:</span><br><span class=\"line\">           flag += <span class=\"built_in\">chr</span>(i)</span><br><span class=\"line\">           <span class=\"keyword\">break</span></span><br><span class=\"line\">print(flag)</span><br></pre></td></tr></table></figure>\n<p>flag:<code>picoCTF&#123;@g3nt6_1$_th3_c00l3$t_2432504&#125;</code></p>\n<h1 id=\"super-safe-rsa\">Super Safe RSA<a title=\"#super-safe-rsa\" href=\"#super-safe-rsa\"></a></h1>\n<h2 id=\"question-11\">Question<a title=\"#question-11\" href=\"#question-11\"></a></h2>\n<blockquote>\n<p>Dr. Xernon made the mistake of rolling his own crypto… Can you find the bug and decrypt the message? Connect with <code>nc 2018shell1.picoctf.com 6262</code>.</p>\n</blockquote>\n<h3 id=\"hint-11\">Hint<a title=\"#hint-11\" href=\"#hint-11\"></a></h3>\n<blockquote>\n<p>Just try the first thing that comes to mind.</p>\n</blockquote>\n<h2 id=\"solution-11\">Solution<a title=\"#solution-11\" href=\"#solution-11\"></a></h2>\n<p>看一下信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c: 6075087024476414532659138701716437603217113412924927299863787548188620337158625</span><br><span class=\"line\">n: 16995743251555690273217604748218275023627813110906708466533535245776011465591891</span><br><span class=\"line\">e: 65537</span><br></pre></td></tr></table></figure>\n<p><code>n</code>很小，总共才80位，可以使用爆破的方式解出<code>p</code>和<code>q</code><br>\n。<a href=\"https://www.alpertron.com.ar/ECM.HTM\" target=\"_blank\">在线工具</a><br>\n。</p>\n<p>得到结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p &#x3D; 166402962209062256362900394698423820317</span><br><span class=\"line\">q &#x3D; 102136061918194068640310910627905419563823</span><br></pre></td></tr></table></figure>\n<p>然后就是很简单的rsa解密了。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> inverse</span><br><span class=\"line\">p = <span class=\"number\">166402962209062256362900394698423820317</span></span><br><span class=\"line\">q = <span class=\"number\">102136061918194068640310910627905419563823</span></span><br><span class=\"line\">c = <span class=\"number\">6075087024476414532659138701716437603217113412924927299863787548188620337158625</span></span><br><span class=\"line\">n = <span class=\"number\">16995743251555690273217604748218275023627813110906708466533535245776011465591891</span></span><br><span class=\"line\">e = <span class=\"number\">65537</span></span><br><span class=\"line\"></span><br><span class=\"line\">phi = (q-<span class=\"number\">1</span>)*(p-<span class=\"number\">1</span>)</span><br><span class=\"line\">d = inverse(e, phi)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"built_in\">hex</span>(<span class=\"built_in\">pow</span>(c,d,n))[<span class=\"number\">2</span>:-<span class=\"number\">1</span>]).decode(<span class=\"string\">&#x27;hex&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>得到flag。</p>\n<p>flag:<code>picoCTF&#123;us3_l@rg3r_pr1m3$_2461&#125;</code></p>\n<h1 id=\"super-safe-rsa-2\">Super Safe RSA 2<a title=\"#super-safe-rsa-2\" href=\"#super-safe-rsa-2\"></a></h1>\n<h2 id=\"question-12\">Question<a title=\"#question-12\" href=\"#question-12\"></a></h2>\n<blockquote>\n<p>Wow, he made the exponent really large so the encryption MUST be safe, right?! Connect with <code>nc 2018shell1.picoctf.com 56543</code>.</p>\n</blockquote>\n<h3 id=\"hint-12\">Hint<a title=\"#hint-12\" href=\"#hint-12\"></a></h3>\n<blockquote>\n<p>What is the usual value for e?</p>\n</blockquote>\n<h2 id=\"solution-12\">Solution<a title=\"#solution-12\" href=\"#solution-12\"></a></h2>\n<p>nc连接服务器，发现这回<code>e</code>的值不小了，但是又变得和<code>N</code>差不多大了，还是参考<a href=\"https://www.anquanke.com/post/id/84632\" target=\"_blank\">CTF中RSA的常见攻击方法</a>，这里存在<strong>低解密指数攻击</strong>。</p>\n<p>Wiener表示如果满足：</p>\n<p><img src=\"https://raw.githubusercontent.com/StefanoWen/img/master/img/20181030001410.png\" alt=\"\" class=\"φcx\"></p>\n<p>那么一种基于连分数(一个数论当中的问题)的特殊攻击类型就可以危害RSA的安全。此时需要满足：</p>\n<p><img src=\"https://raw.githubusercontent.com/StefanoWen/img/master/img/20181030001425.png\" alt=\"\" class=\"φcx\"></p>\n<p>如果满足上述条件，通过Wiener Attack可以在多项式时间中分解n。</p>\n<p>使用开源工具<a href=\"https://github.com/pablocelayes/rsa-wiener-attack\" target=\"_blank\">https://github.com/pablocelayes/rsa-wiener-attack</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">Created on Dec 14, 2011</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">@author: pablocelayes</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> ContinuedFractions, Arithmetic, RSAvulnerableKeyGenerator</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hack_RSA</span>(<span class=\"params\">e,n</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    Finds d knowing (e,n)</span></span><br><span class=\"line\"><span class=\"string\">    applying the Wiener continued fraction attack</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    frac = ContinuedFractions.rational_to_contfrac(e, n)</span><br><span class=\"line\">    convergents = ContinuedFractions.convergents_from_contfrac(frac)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (k,d) <span class=\"keyword\">in</span> convergents:</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">#check if d is actually the key</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> k!=<span class=\"number\">0</span> <span class=\"keyword\">and</span> (e*d-<span class=\"number\">1</span>)%k == <span class=\"number\">0</span>:</span><br><span class=\"line\">            phi = (e*d-<span class=\"number\">1</span>)//k</span><br><span class=\"line\">            s = n - phi + <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"comment\"># check if the equation x^2 - s*x + n = 0</span></span><br><span class=\"line\">            <span class=\"comment\"># has integer roots</span></span><br><span class=\"line\">            discr = s*s - <span class=\"number\">4</span>*n</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(discr&gt;=<span class=\"number\">0</span>):</span><br><span class=\"line\">                t = Arithmetic.is_perfect_square(discr)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> t!=-<span class=\"number\">1</span> <span class=\"keyword\">and</span> (s+t)%<span class=\"number\">2</span>==<span class=\"number\">0</span>:</span><br><span class=\"line\">                    print(<span class=\"string\">&quot;Hacked!&quot;</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> d</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span> hack_RSA(<span class=\"number\">40276660093351912353325027146420685937733052504816262053896184883506171821807404583368346339215117527771791856465371395445756580309600483928576564180890942975279324690215478497697070066763075254913358736488880708349691537688815542401252154948245178131989398664206152846321309331764046013649756619261071229089</span>, <span class=\"number\">111583170127578807909192691245137491304582814592836631984536450317481568426014198265987965591526088832329215543505708705754504100598169044438075849117477605468201110960653836265368253728288600909205172996903271308132928634087380939250941030896277683335203499540010766665619316042268962892586456274440478367001</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>解得私钥<code>d</code>：65537，然后解密：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> inverse</span><br><span class=\"line\">c = <span class=\"number\">85669272593914592964238296252223602553240367010559050180727431963691933620008524312226679252731896404760784512941433411361850153756503392392692524466402024374178583928667263379044625258718935929469661451158056304059057475244237032774703099421851155804449755624009586256845110664849184621665767806044750594973</span></span><br><span class=\"line\">n = <span class=\"number\">111583170127578807909192691245137491304582814592836631984536450317481568426014198265987965591526088832329215543505708705754504100598169044438075849117477605468201110960653836265368253728288600909205172996903271308132928634087380939250941030896277683335203499540010766665619316042268962892586456274440478367001</span></span><br><span class=\"line\">e = <span class=\"number\">40276660093351912353325027146420685937733052504816262053896184883506171821807404583368346339215117527771791856465371395445756580309600483928576564180890942975279324690215478497697070066763075254913358736488880708349691537688815542401252154948245178131989398664206152846321309331764046013649756619261071229089</span></span><br><span class=\"line\">d = <span class=\"number\">65537</span></span><br><span class=\"line\">m = <span class=\"built_in\">pow</span>(c, d, n)</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"built_in\">hex</span>(m)[<span class=\"number\">2</span>:-<span class=\"number\">1</span>].decode(<span class=\"string\">&#x27;hex&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>flag:<code>picoCTF&#123;w@tch_y0ur_Xp0n3nt$_c@r3fu11y_5261983&#125;</code></p>\n<h1 id=\"super-safe-rsa-3\">Super Safe RSA 3<a title=\"#super-safe-rsa-3\" href=\"#super-safe-rsa-3\"></a></h1>\n<h2 id=\"question-13\">Question<a title=\"#question-13\" href=\"#question-13\"></a></h2>\n<blockquote>\n<p>The more primes, the safer… right.?.? Connect with <code>nc 2018shell1.picoctf.com 11423</code>.</p>\n</blockquote>\n<h3 id=\"hint-13\">Hint<a title=\"#hint-13\" href=\"#hint-13\"></a></h3>\n<blockquote>\n<p>How would you find d if there are more than 2 prime factors of n?</p>\n</blockquote>\n<h2 id=\"solution-13\">Solution<a title=\"#solution-13\" href=\"#solution-13\"></a></h2>\n<p>这题给我们的数据如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c: 2214959746368961374343866619773680463913808855252144119575578619282028038148568609891198127966225495311682540323131579203618894145626046974546075970616339033486317429461235324910794466410074881752239541146624247745072518241741204968025293372054661473208051944193745386532992238774551013797836031291096741</span><br><span class=\"line\">n: 5564465787507426784189854287795264081761345977763964262369153883931335062166838686916377911069328789715623668583315372050520387414170383621534793892389463905512682152442890656361180400315699526374103389751180954335677791471685242043876553878553597343813515063304714971565013966010693181624796612216036537</span><br><span class=\"line\">e: 65537</span><br></pre></td></tr></table></figure>\n<p>使用<a href=\"https://www.alpertron.com.ar/ECM.HTM\" target=\"_blank\">Alpertron</a>分解，<code>n</code>可以分解为多个质因子。</p>\n<p>解密过程可以参考https://crypto.stackexchange.com/questions/31109/rsa-enc-decryption-with-multiple-prime-modulus-using-crt。</p>\n<p>脚本如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c = <span class=\"number\">2214959746368961374343866619773680463913808855252144119575578619282028038148568609891198127966225495311682540323131579203618894145626046974546075970616339033486317429461235324910794466410074881752239541146624247745072518241741204968025293372054661473208051944193745386532992238774551013797836031291096741</span></span><br><span class=\"line\"></span><br><span class=\"line\">n = <span class=\"number\">5564465787507426784189854287795264081761345977763964262369153883931335062166838686916377911069328789715623668583315372050520387414170383621534793892389463905512682152442890656361180400315699526374103389751180954335677791471685242043876553878553597343813515063304714971565013966010693181624796612216036537</span></span><br><span class=\"line\"></span><br><span class=\"line\">e = <span class=\"number\">65537</span></span><br><span class=\"line\"></span><br><span class=\"line\">p1 = <span class=\"number\">2175350609</span></span><br><span class=\"line\">p2 = <span class=\"number\">2182560491</span></span><br><span class=\"line\">p3 = <span class=\"number\">2196605027</span></span><br><span class=\"line\">p4 = <span class=\"number\">2209029391</span></span><br><span class=\"line\">p5 = <span class=\"number\">2466547367</span></span><br><span class=\"line\">p6 = <span class=\"number\">2510616961</span></span><br><span class=\"line\">p7 = <span class=\"number\">2588079563</span></span><br><span class=\"line\">p8 = <span class=\"number\">2704140821</span></span><br><span class=\"line\">p9 = <span class=\"number\">2736762829</span></span><br><span class=\"line\">p10 = <span class=\"number\">2796597043</span></span><br><span class=\"line\">p11 = <span class=\"number\">2809479437</span></span><br><span class=\"line\">p12 = <span class=\"number\">2829659713</span></span><br><span class=\"line\">p13 = <span class=\"number\">2837556643</span></span><br><span class=\"line\">p14 = <span class=\"number\">2858051057</span></span><br><span class=\"line\">p15 = <span class=\"number\">3032087491</span></span><br><span class=\"line\">p16 = <span class=\"number\">3042267581</span></span><br><span class=\"line\">p17 = <span class=\"number\">3063304267</span></span><br><span class=\"line\">p18 = <span class=\"number\">3102491383</span></span><br><span class=\"line\">p19 = <span class=\"number\">3219243151</span></span><br><span class=\"line\">p20 = <span class=\"number\">3284737447</span></span><br><span class=\"line\">p21 = <span class=\"number\">3392021827</span></span><br><span class=\"line\">p22 = <span class=\"number\">3789952469</span></span><br><span class=\"line\">p23 = <span class=\"number\">3812358577</span></span><br><span class=\"line\">p24 = <span class=\"number\">3858988619</span></span><br><span class=\"line\">p25 = <span class=\"number\">3864352469</span></span><br><span class=\"line\">p26 = <span class=\"number\">3877179469</span></span><br><span class=\"line\">p27 = <span class=\"number\">3910354507</span></span><br><span class=\"line\">p28 = <span class=\"number\">3985847791</span></span><br><span class=\"line\">p29 = <span class=\"number\">3990903569</span></span><br><span class=\"line\">p30 = <span class=\"number\">4041031661</span></span><br><span class=\"line\">p31 = <span class=\"number\">4069378073</span></span><br><span class=\"line\">p32 = <span class=\"number\">4203209281</span></span><br><span class=\"line\"></span><br><span class=\"line\">primes = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, \\</span><br><span class=\"line\">          p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, \\</span><br><span class=\"line\">          p26, p27, p28, p29, p30, p31, p32]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">egcd</span>(<span class=\"params\">a, b</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> a == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (b, <span class=\"number\">0</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        g, y, x = egcd(b % a, a)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (g, x - (b // a) * y, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">modinv</span>(<span class=\"params\">a, m</span>):</span></span><br><span class=\"line\">    g, x, y = egcd(a, m)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> g != <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> Exception(<span class=\"string\">&#x27;modular inverse does not exist&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x % m</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># From https://crypto.stackexchange.com/questions/31109/rsa-enc-decryption-with-multiple-prime-modulus-using-crt</span></span><br><span class=\"line\">ts = []</span><br><span class=\"line\">xs = []</span><br><span class=\"line\">ds = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(primes)):</span><br><span class=\"line\">\tds.append(modinv(e, primes[i]-<span class=\"number\">1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">m = primes[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(primes)):</span><br><span class=\"line\">\tts.append(modinv(m, primes[i]))</span><br><span class=\"line\">\tm = m * primes[i]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(primes)):</span><br><span class=\"line\">\txs.append(<span class=\"built_in\">pow</span>((c%primes[i]), ds[i], primes[i]))</span><br><span class=\"line\"></span><br><span class=\"line\">x = xs[<span class=\"number\">0</span>]</span><br><span class=\"line\">m = primes[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(primes)):</span><br><span class=\"line\">\tx = x + m * ((xs[i] - x % primes[i]) * (ts[i-<span class=\"number\">1</span>] % primes[i]))</span><br><span class=\"line\">\tm = m * primes[i]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"built_in\">hex</span>(x%n)[<span class=\"number\">2</span>:-<span class=\"number\">1</span>].decode(<span class=\"string\">&quot;hex&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>flag:<code> picoCTF&#123;p_&amp;*q_n0_r*$_t!!_6725536&#125;</code></p>\n","prev":{"title":"picoCTF2018 Writeup之Forensics篇","link":"/picoCTF2018-Writeup之Forensics篇"},"next":{"title":"picoCTF2018 Writeup之General-skills篇","link":"/picoCTF2018-Writeup之General-skills篇"},"plink":"https://pineswen.tk//picoCTF2018-Writeup之Cryptography篇/","toc":[{"id":"前言","title":"前言","index":"1"},{"id":"crypto-warmup-1","title":"Crypto Warmup 1","index":"2","children":[{"id":"question","title":"Question","index":"2.1","children":[{"id":"hint","title":"Hint","index":"2.1.1"}]},{"id":"solution","title":"Solution","index":"2.2"}]},{"id":"crypto-warmup-2","title":"Crypto Warmup 2","index":"3","children":[{"id":"question-1","title":"Question","index":"3.1","children":[{"id":"hint-1","title":"Hint","index":"3.1.1"}]},{"id":"solution-1","title":"Solution","index":"3.2"}]},{"id":"heeeeeeere's-johnny!","title":"HEEEEEEERE’S Johnny!","index":"4","children":[{"id":"question-2","title":"Question","index":"4.1","children":[{"id":"hint-2","title":"Hint","index":"4.1.1"}]},{"id":"solution-2","title":"Solution","index":"4.2"}]},{"id":"caesar-cipher-1","title":"caesar cipher 1","index":"5","children":[{"id":"question-3","title":"Question","index":"5.1","children":[{"id":"hint-3","title":"Hint","index":"5.1.1"}]},{"id":"solution-3","title":"Solution","index":"5.2"}]},{"id":"hertz","title":"hertz","index":"6","children":[{"id":"question-4","title":"Question","index":"6.1","children":[{"id":"hint-4","title":"Hint","index":"6.1.1"}]},{"id":"solution-4","title":"Solution","index":"6.2"}]},{"id":"blaise's-cipher","title":"blaise’s cipher","index":"7","children":[{"id":"question-5","title":"Question","index":"7.1","children":[{"id":"hint-5","title":"Hint","index":"7.1.1"}]},{"id":"solution-5","title":"Solution","index":"7.2"}]},{"id":"hertz-2","title":"hertz 2","index":"8","children":[{"id":"question-6","title":"Question","index":"8.1","children":[{"id":"hint-6","title":"Hint","index":"8.1.1"}]},{"id":"solution-6","title":"Solution","index":"8.2"}]},{"id":"safe-rsa","title":"Safe RSA","index":"9","children":[{"id":"question-7","title":"Question","index":"9.1","children":[{"id":"hint-7","title":"Hint","index":"9.1.1"}]},{"id":"solution-7","title":"Solution","index":"9.2"}]},{"id":"caesar-cipher-2","title":"caesar cipher 2","index":"10","children":[{"id":"question-8","title":"Question","index":"10.1","children":[{"id":"hint-8","title":"Hint","index":"10.1.1"}]},{"id":"solution-8","title":"Solution","index":"10.2"}]},{"id":"rsa-madlibs","title":"rsa-madlibs","index":"11","children":[{"id":"question-9","title":"Question","index":"11.1","children":[{"id":"hint-9","title":"Hint","index":"11.1.1"}]},{"id":"solution-9","title":"Solution","index":"11.2"}]},{"id":"spyfi","title":"SpyFi","index":"12","children":[{"id":"question-10","title":"Question","index":"12.1","children":[{"id":"hint-10","title":"Hint","index":"12.1.1"}]},{"id":"solution-10","title":"Solution","index":"12.2"}]},{"id":"super-safe-rsa","title":"Super Safe RSA","index":"13","children":[{"id":"question-11","title":"Question","index":"13.1","children":[{"id":"hint-11","title":"Hint","index":"13.1.1"}]},{"id":"solution-11","title":"Solution","index":"13.2"}]},{"id":"super-safe-rsa-2","title":"Super Safe RSA 2","index":"14","children":[{"id":"question-12","title":"Question","index":"14.1","children":[{"id":"hint-12","title":"Hint","index":"14.1.1"}]},{"id":"solution-12","title":"Solution","index":"14.2"}]},{"id":"super-safe-rsa-3","title":"Super Safe RSA 3","index":"15","children":[{"id":"question-13","title":"Question","index":"15.1","children":[{"id":"hint-13","title":"Hint","index":"15.1.1"}]},{"id":"solution-13","title":"Solution","index":"15.2"}]}]}